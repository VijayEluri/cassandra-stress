Overview
---------
cassandra-stress is modeled after the stress.py script in Apache Cassandra's source distribution.

cassandra-stress is built on top of [Hector](http://github.com/rantav/hector), a well-tested and widely deployed Java client for Apache Cassandra. The benefits of using Hector for a tool like this are many:

+  JMX hooks into Hector for visibility into runtime statistics
+  Extensive configurability of which node(s) to target
+  Verbose logging output available
+  Hooks into performance counters to correllate client and server performance

cassandra-stress is a currently just a command line app which supports the following commands (syntactically identical to stress.py where possible):

	usage: stress [options]... url1,[[url2],[url3],...]
	 -b,--batch-size <arg>   The number of rows in the batch_mutate call
	 -c,--columns <arg>      The number of columsn to create per key
	 -m,--unframed           Disable use of TFramedTransport
	 -n,--num-keys <arg>     The number of keys to create
	 -o,--operation <arg>    One of insert, read, rangeslice, multiget
	 -t,--threads <arg>      The number of client threads to create
	 -h,--help               Print this help message and exit

Running cassandra-stress is currently easiest via the mvn-exec-plugin. An example invocation is below:

`mvn -e exec:java -Dexec.mainClass="com.riptano.cassandra.stress.Stress" -Dexec.args="-o multiget -b 50 -n 12000"`


Todo (in rough priority)
------------------------
+  Roll Jar for non-maven required execution
+  Create ColumnFamily specifically for test
+  Add JMX innards for MBean driven command/control
+  Apache Cassandra 0.6.x support
+  Add (much) better key distribution (gaussian, stdev argument)
+  SuperColumn support


Misc.
------
Offered under an MIT license (see LICENSE in the top level directory). As with any halfway decent load testing tool, you can generate a lot of load and put a system under duress or even cause it to fail. You are solely responsible for any issues experienced the execution of this tool may cause. Use at your own risk.

Cheers,   
zznate 
